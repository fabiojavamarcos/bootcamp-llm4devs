Network_x,DB_x,Interpreter_x,Logging_x,Data Structure_x,i18n_x,Setup_x,Microservices_x,Test_x,IO_x,UI_x,App_x,prNumber,Network_y,DB_y,Interpreter_y,Logging_y,Data Structure_y,i18n_y,Setup_y,Microservices_y,Test_y,IO_y,UI_y,App_y,issueTitle,issueBody,issue_Comments
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,491,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,add close all/others/ in database tab menu,see #314,|| :+1: :sunglasses:  || continue discussion in pr #491
1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,677,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,make bibtex parser more robust against missing newlines,as described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line) ie `% encoding: myencoding @article{}`actually as the tests reveal it was not a problem with the actual parser but within the file opening logic i dont view this pr as a complete fix for #669 and #621 since not just the parser but also the serialization should be improvedalso fix a bug that prevented the import of bibtex entries having only a key as its content,|| related #621 || @tobiasdiez is this fixed? || @stefan-kolb it will be fixed with #718  || too late in the evening should have seen that myself :smile: :+1:
1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,915,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,add button in preference dialog to reset preferences,implements #455 and/or   change in changelogmd described?-  ? ( )-  ? - only ui change-  ?,|| you can reset the preferences by starting jabref with `java -jar jabref-211jar --prdef all -n` || we dont really need two issues in different repositories for the very same thing do we? is enough
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1056,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fixes npe in export to external db,fixes npe in export to external dbadd db type to export succesful messagereformatting#1055no changelog because i think it was new introduced by the redesign of the entry sorting (passing null),|| i am looking into that seems like i found the problem || yes someone still passes `null` to the entries argument which was the old version to indicate that all entries should be sorted  || @tobiasdiez  yep there is missing a getselectedentries() as parameter || hmm i thought that i (ie eclipse) had found all performexport calls but obviously not
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1298,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,added option to copy version information in the about dialog,added option to copy version information of jabref in the about dialog as described in #871 this will help with filing issues and bug reports as the version of jabref os and java will be copied -  change in changelogmd described-  -   ()![screen shot 2016-04-25 at 22 38 58](https://cloudentcom/assets/15340757/14798171/915a5bbc-0b36-11e6-8bbf-b01cb100b2cdpng),|| additionally i note some weird characters among the author names they appear both on your screenshot and on my linux computer || the weird characters are because of [gradle-1267]( fixed by  which is not integrated yetsee also #682 || see intelij copy to clipboard link in about dialog || @boceckts could you port the copy and paste from #964 to the `master` branch (without javafx libraries)? || refs #968 (javafx) and #1298 (swing) i think its solved
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1318,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,update localization instructions,corrected gradlew task name#1312@koppor  @stefan-kolb,|| in my other pr  #1265   already changed the error/info text output of the consistencytest  output to the new gradle task name edit// linked wrong pr || @siedlerchr wrong pr referenced?
1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1397,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,add fields for nbibimporter and add testfile,regarding: 1063]( medlineplain importer doesnt have all fields that the nbib format has so i added the fields to the medlineplain format and added a test+ testfile for the nbib formata list of the elements that should be imported now can be found [here](  ,|| at least for their xml fomat there is a simple xsl-script: i found a kind of reference-field-list for the nbib-medline format and their meanings: with this table: || hm we got a medline fetcher whats the difference between our medline/medline plain and nbib? || medline plain is a subset of nbib so every field of medline plain is also a field of nbib but not every nbib field is in the medline plain format i will prepare a pr where i add the fields to the medline plain importerafter that i will take care of medline and nbib || ive added the nbib fields to medline and medlineplain so i think this issue can be closed now
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1429,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1342: show description of case converters as tooltip,<describe the changes you have made here:  >-  change in changelogmd described-  -   (),|| this was supported in a previous jabref version but was changed to have standardized names due to  the save actions || in that case will the right-click menu be disappearing from the interface?  i like the idea of consistency applied through save actions / clean-up  however if a user is interactively using the feature when entering text in a box it would seem better to have context immediately provided || we add a tooltip with the description what the formatter does when hovering over the action in the right-click menu this should suffice :) || a tooltip would be great thanks!
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1453,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,refactor placement of parsing and writing logic,according to the following conventions:- all objects which can be read from a string have `public static type parse(stringy input)` method- all objects which can be written to a string have a `public stringy getasstring()` methodshould 888## -  change in changelogmd described-  -   (),|| my 2 cents: for the file field we provided a class that can convert from string to list<parsedfilefield> and back to me the bibwriter and bibparser know how to write bibentries using key/value pairs of strings and metadata in its general format all other information should be part of such converter classesbut i am not sure whether this approach is currently feasible for the metadata as its serialization and parsing is highly customized and does not follow a general scheme as the bibtex structure does || i have been dealing with the serialization of `metadata` a lot lately i can say that it is feasible to extract this logic currently it is quite localized in private methods in the parser and writer and we should be able to move it without too much effort the difficult part about serializing `metadata` is that every tag has very specific serialization conventions which requires a lot of if/elseif structuring moreover i dont think this will require a lot of new classes after all for what kind of data do we need such transformers? `metadata` `customentrytype` what else?the parser and writer would benefit from a simplifaction so i am for moving this logic
0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1599,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,fixed #1592,this should 1592-  change in changelogmd described,|| there is a version that should fix this at  (in 15 minutes or so) please try it out || it works as expected nowthanks for fixing it so quickly!
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1671,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1288 newly opened bib-file is not focused,-  open a new file and it is correctly focused afterwards-  open a file that was already opened before is correctly focused afterwards-  open a file two times and it is only opened once,|| should be a focus thing inside `jabrefguijava` near line 108
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1942,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,mods importer,regarding: #1920 adds an importer for the mods (xml) format the importer is written with a jaxb parserdetails on the format and the newest xml schema can be found [here]( used the newest schema (version 36)-  change in changelogmd described-  -  manually tested changed features in running jabref,|| +1 || i will close this as everything seems to be done
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1944,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,try around with xmlunit,   -->see #1943 for details -  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1981,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,icon does not change when toggling global search,issue: #1979,
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2163,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,fix highlighting issues,2133earlier highlighting was done manually by adding tags to matches in the html text being sent to the pane instead i have opted to make use of the highlighting features of the jeditorpane class this gives the additional benefit that the highlight colour is changed automatically based on the system theme changes - created jeditorpanewithhighlighting class- removed matchhighlighter class and its tests- removed highlighting related tests from layoutentrytest-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2179,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,clear bibtexkey exception,2177 nullpointerexception caused by clearing bibtexkey field in entry editor-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| another related bug which is more visible to the end usersteps to reproduce:1 open database2 edit some field for an entry3 open another entry and clear its bibtexkey4 save database5 quit jabref (by pressing ctrl-q or from the menu) and select discard changes when prompted![jabref waiting for save operation to finish](https://cloudentcom/assets/544054/19501176/61b5de02-9571-11e6-8adf-14efd6a59ae3png)
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,2400,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,2394 groups matching with brackets in name,2394-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| thanks for reporting this issue it should be fixed in the latest development version could you please check the build from  thanks! || thanks works perfectly
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2614,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,cleanup window has a scrollbar now,fix for issue #2501-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| i tried to fix the layout stuff in #2415 i could not really test it so i would ask you to test that version  as soon as the tests run through  || no resize for cleanup window using ````jabref-400-dev--snapshot--2017-02-03--movefiledir--07a1c4477jar```` || this has been fixed with #2614 - and is now included in the dev builds
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2711,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,avoid conversion of single underscores,2664single underscores that are not followed by `{` are not converted to unicode during the latex to unicode conversion this is not actually correct according to the rules of latex but seems to be an important exception required by our usersthis is achieved by the following: 1 replace all single underscores with `jabrefunderscore` 2 do the unicode conversion 3 replace `jabrefunderscore` with an underscoretodo: we should find a better magic word instead of `jabrefunderscore` because every character will be processed by latex2unicode and that costs performance however it should still be long and unique enough so that we avoid accidental conversions suggestions anyone?-  change in changelogmd described-  -  manually tested changed features in running jabref,|| is it possible to file an issue at  || hmm i think the behavior of determining subscript is consistent with latex (although if not in the math environment a compile error would be thrown) in other words i guess latex2unicode is doing its job as intended?maybe jabref can add some extra logic to determine when latex2unicode should kick in? || when interpreting `_` with latex the `_` command is a command stating that the following character should be go to subscript if one does not want that one has to load the [underscore]( package see  jabref should escape the underscore when doing the conversion (this assumes that the user loads the underscore package)? or warn the user?  || solution idea: `_` is only converted if followed by `_{} ` - idea: replace _ by arbitrarystring then convert to unicode and then convert back || @tomtung probably in `text_u` the `u` should be converted to subscript letter in unicode and show it as text·µ§ || @tobiasdiez yeah thats the current behavior also i use `_(whatever)` to represent subscript when there are no corresponding unicode subscript characters available
0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2972,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,add remove link context menu entry in file editor,   -->fix for #2968 (  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from  and report back if it works for you
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2995,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,less backups,addresses #2993the frequent events are due to the bidirectional binding which transfers every change directly into the bibentry if we want fewer events the only solution will probably be to break the binding which would be very disappointing for the javafx implementation in my point of view the problem is not on the side of event creation after all every change should trigger an event and javafx triggers many changes imho this should be fixed in how we react to eventsi also noticed the exception but do not get a dialog this seems to happen because of the save operation invoked by the backupa solution might be to do less backups by: 1 doing backups only every x events and not for every event 2 ignoring fieldchangeevents in the backup 3 adding the size of the field change in the fieldchangeevent class so that you can ignore it if only 1 character changedthis pr combines options 1 and 3 ie: the backup manager ignores events that are very minor and only does a backup if enough of them have happened (currently set to five)what do you think?-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| fixed by #2995
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3007,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,add preference migration for keybdingings,fix for #2980    -->-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| preferencesmigrationsjava
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3551,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,make path relative when adding automatically found file,3476   -->-----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| hirelative links are created automatically and this depends on your settings there are 4 settings for files:1 checkbox: use bibfile as main file location -> overwrites all other settings2 main file directory globally in jabref valid for all files3 use and library setting in the properties of the bib file: here you can also enter relative pathso depending on your settings jabref will relatvize all paths against the first found file directory || hiall of these 3 were set in jabref 40 and are still set in the development version im using now (1 checked 2 set to `/home/bitzer/papers` and 3 set to `/home/bitzer/papers` too) still version 40 added relative paths while the development version adds absolute paths || is the location of the bibfile the same as /home/bitzer/papers? if not then uncheck the combobox || yes the bibfile is in /home/bitzer/papers itself also the issue persists in the newest version jabref-41-dev--snapshot--2017-12-08--master--6f39151a7jar || ah i now can reproduce your  behavior it is the auto link which adds it as absolute path if you manually select the file it is correct i will be working on a fix for this || cool thank you!
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,3600,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,make it possible to disable autocompletion in the search bar,3598 by covering the autocompletion in the search bar with the same preference option as in the entry editor -----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| there is a preference option that you can set as part of the entry editor preferences which turns off the autocompletion there i think we should just extend the preference to capture the search box as well
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,3709,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,group separator escaping,3646,|| duplicate of #365
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3766,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,update architecture tests to catch static imports,fixes a part of #2617updates the architecture tests to junit5 and also catches violations in static imports now i tested this by adding a static import and checking that the build breaks it does but of course i had to remove the cause again-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| idea: there may be checkstyle rules that can be configured to cover our architecture tests || oh that was me fixed this instance in #2618 unfortunately i dont have time to investigate 2however i am happy to have raised attention to this problem by committing this mistake || further architecture related desirable tests are:- logic and viewmodel: no javafx except javafxcollections- view viewmodel and controller: no globals and jabrefgui no direct fxdialogservice- all fxml files can be loaded successfully- no fetcher is used directly outside of the import package || there is a new tool called archunit maybe this is helpful https://githubcom/tng/archunit
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3968,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fix ieee fetcher by enabling cookie support,3966 apparently when in vpn network of university ieee fulltext fetcher needs cookie support enabled        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| the test for open access articles such as  workthere should be no difference for the other articles as long as you really have accessit is hard to debug for me as i dont have ieee access at university @jabref/developers anyone of you has access? || i can reproduce this error for me the ieee fetcher tests fail when i am connected using university vpnthe html page  i get from the url downloader talks about missing cookie support i will see if i can fix that  || thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from  and report back if it works for you || no please read the text very carefullyi have explicitly mentioned that i am using the latest developmental version the problem still persists please reopen this issue || we just merged a pull request fixing it || @krishnakumarg1984  yes i know but i just merged the code into the master branch the development build gets automatically updated and built by our ci servers whenever someone commits to the master branch this usually takes a couple of minutes the version string contains the first part of the commit id  (help-> about)  || ah i am so sorry for not correctly interpreting what you said i shall try the latest development build and report back sorry for the mild confusion in my last post || @siedlerchr  @stefan-kolb we may have to reopen this issuei just tried with the latest build>>jabref 42-dev--snapshot--2018-04-20--master--8bbc40e13>windows 7 61 x86 >java 180_161from my universitys network and same error pop-up message persists   curiously the event log in jabref is empty i wonder why #3968 says the problem is only with vpn access? i am currently physically on the campus library on a windows 7 machine hard-wired to the network with a lan cable  just to confirm that this is indeed a persisting bug there is no issue with full-text access to this article from a standard browser pointed to the url   || i think @krishnakumarg1984 is right and the issue still persist just looking at the code never going to match ` || hmm thats odd i will look into that again tomorrow  || @krishnakumarg1984  i just merged the fix which supports those the ieee document urls you have like in your entry  and i also tested your entry with university access and worked for me so i would like you to test this again || @siedlerchr  thank you i shall go to university to check this out will report back soon || woohoo you guys are amazing i just tried the latest master-build from my universitys network and can confirm that this is now fixed  was able to download the full-text of the bibtex entry for which the issue was opened thank you for accepting and pro-actively working to fix this issue#### version info of jabref build used:>jabref 42-dev--snapshot--2018-04-21--master--5c664e1d2>windows 7 61 x86 >java 180_161
1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4184,0.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,3062: ctrl + f selects search field again,        ( (      because github does not support autolinking there -->shortcut was simply not registered also remove a bit of legacy code which is no longer needed-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| i debugged a bit and the action is correclty recognized and the method to requestfocus is called but somehow the textfield is not focused maybe @tobiasdiez  has an idea because he changed that together with the autocompletioni even tried to wrap it in a platformrunlater call but that did not work || happens again in the `maintable-beta` branch as discussed in the devcall i should open issues for issues with that branch (which will become the master branch)
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4212,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,make attached files relative to the file directory,4201        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| did you add the pdf manually or did you use a fetcher?as far as i remember there was nothing changed in the behavior maybe a cleanup call is needed i currently have the code not at hand  || sorry for the delay:i used the rightclick add file for adding the pdf || it only happens if you use rightclick on entry -> attach fileinside the general tab it works fine  || thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4245,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,fix style issues in about dialog,        ( (      because github does not support autolinking there -->4202 and a few other small style related issues i also created a little new app that make it simple to test the display of javafx controls as of now i only added a lot of buttons in different styles and states:( merge instead of squashing the commits-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| confirmed under windows 10 latest master the window is too small to show the buttons at bottom and you cant resize them( || i digged a bit into this must be related to some binding the change of our dialog layout stuff under the hood the information for authors etc is correctly filled in the variables - so its not the problemin contrast to other dialogs the binding are directly defined in the fxml
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4470,0.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,3189 fix group renaming,fix group renaming #3189,|| when you close and expand the group the change should also be visible no idea though why it is not visible immediately the same issue occurs if you assign an icon or color to the group || might be related to this: || these bug still exists i will work on it || when i press edit group that show `orgjabrefmodelgroupsabstractgroup#name` instead of `orgjabrefguigroupsgroupnodeviewmodel#displayname` why? whats the difference between them? || the `displayname` is a formatted version of `name` for example if `name` contains latex commands like `hell\{o}` then `displayname` is the unicode version `hell√≥` || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version || can confirm this has been fixed in:jabref 50-dev--snapshot--2019-01-05--master--d281ece4bwindows 10 100 amd64 java 180_191
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4738,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,adding support for input methods,4474        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| the workaround posted in  should work || i would like to work on this issue || thanks to @captaindavinci  this should now be fixed in the latest development versionwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version || yes it is fixed thank you!
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,4758,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,modifications to improve contrast of ui elements,        ( (      because github does not support autolinking there -->fixes 4583](  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| hi im interested in working on this issue || thanks to @samiyac this is now implemented in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version
1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4822,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,convert autolinkfilesaction to javafx,4819also convert a few other message boxes to javafx        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4839,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fix parser exception when loading tex-groups with non-existing file,4735 catch file not found exception and handle non existing aux files gracefully        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| hi @tobiasdiez i would like to work on this issue || @arturolc ive now fixed this myself as i again run into this problem hope you didnt already started working on this
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5123,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,add search for citations in latex files (back-end and gui),here is a **latex parser tool** that reads each file line by line parses and analyzes them for detecting different citation formatsits user interface consists of a first dialog box that will **ask the user for a directory** to search tex files then the user could **select specific files** after that the tool parses these files and **shows all the bibliographic entries found** in a new dialog box![latex_parser]( issue: 5002](  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| first of all congratz @davidemdot  if the tex file is related with bib file the solution would become rather complex the workflow would be something like 1 search and find \cite in tex file2 extract the keyword of the related bib entry3 search bibtex file for that keyword and extract the bib entry itself4 list bib entries in jabref main table5 add forward and backward integration for editing bib entriesim nor pro in latex or jabref but always would love to help out in any issues or related workhari || thanks so much @harinda05! i really appreciate your time the workflow that you propose is broadly what it has been planned therefore i am happy to agree with your point of viewwhenever you may have some spare time it would be great if you could have a look at some prototypes please they are shown in this forum thread: particular here is the prototype for finding bibliographic entries:![finding bibliographic entries]( || hi @davidemdot  i tested your additions with my thesis and i found it actually useful üëç however i found an issue: in the citations search results (and the tab) you show the quoting paragraph in the tooltip as there is no automated linebreak this tooltip becomes very large is there a way to automatically break the paragraph into multiple lines and to shorten long paragraphs into about 5 lines before and after the quotation? long urls probably have to be shortened by force || @calixtushi there!thank you for your quick and positive feedback big point what you commented we will work on it and have a solution as soon as possible![tooltip]( you again! || there is a class called tool tip text util or similar maybe you can add it there || as this is project is now finished and the feature included in the latest development versions ill close this issue feel free to experiment with it and report any problems that you encounter or suggestions for improvement
0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5210,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fix double paste on different os,4845 fixes #4699 fixes #4836 upon pasting macos calls the system paste as well as jabrefframeeditaction#execute() this caused a duplicate call of the paste,|| cannot confirm under windows please try java 8u202 as there have been several bug fixes for mac: || it still persists with latest (18u202) oracle jdk || addon: if an entry is pasted into the maintable it is also pasted twice || reproduced this bug start to work on it  || thanks to @linusdietz  and @stefan-kolb  this issue is now fixed in the latest master!
0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5210,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fix double paste on different os,4845 fixes #4699 fixes #4836 upon pasting macos calls the system paste as well as jabrefframeeditaction#execute() this caused a duplicate call of the paste,|| seems to be only a mac issue on windows 10 i cannot confirm this try updating your java to 8u202 there have been several mac specific fixes || > seems to be only a mac issue on windows 10 i cannot confirm this> try updating your java to 8u202 there have been several mac specific fixesi did the update  however the issue is unaffected || i have a mac os i will investigate it  || @bdcaf  @tobiasdiez  cant reproduce it run jabref via `intellij idea` latest master || thanks to @linusdietz  and @stefan-kolb  this issue is now fixed in the latest master!
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5328,0.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,improve group coloring and item count,5327 the problem was that `gettreetablerowgetitem()` in `viewmodeltreetablecellfactory` still returned the old item (and not the new one passed as method argument to `updateitem`) since i was already looking at the code this pr also fixes #3112 that improves the coloring after an entry was added to the group also fixes #2857 (at least i couldnt replicate it anymore)        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| jabref 50-dev--snapshot--2019-09-18--master--1601770f4windows 10 100 amd64 java 1104-bellsoftthis appears to be fixed in the latest dev version cheers!
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,925,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,add tests for metadata parsing,this solves #707 and prepares the way to refactor the metadata classi added a few methods to the metadata class to make testing more convenient many calls to getdata() in fact can be replaced by these new methods i think this is something for a new prone question: to write the tests in a nice way i had to overwrite a few equals methods in particular for the lowercasechanger should i also override equals for all other formatters?,|| seems like this issue has already been fixed 8 months ago high time for closing
0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,937,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,preview panel is now updated when an entry is cut/deleted,936when an entry is cut/deleted the preview panel will be hidden due to the fact that no entry is selected anymore-  change in changelogmd described?-  ? ( )-  ?-  ?,|| nice video :smile: for reproducing the issue!
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1014,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,improved exception handling in tests cases,never catch an exceptionremoved unnecessary exceptionsthrow specific exceptions never only exceptionref #1012 -  ? ( )-  ?-  ?,|| i just added a corresponding point to the wiki  || i am just going through the tests to check em
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1041,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,write database type in lower case into the bib file,this finally 963 a quick fix has been introduced in 661eea007e555 but that does not cover the lower case writing of the type```@comment{jabref-meta: database_type:bibtex}```finally gets```@comment{jabref-meta: databasetype:bibtex}```-  change in changelogmd described -> this has been introduced in the development versions after the last release thus no entry required-   -> tests have been adapted to match this new implementation,|| you keep `bibtex` and `biblatex` (instead of `bibtex` and `biblatex`) because of  :innocent:
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1192,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,preview panel is now updated when an entry is cut/deleted (again),when i fixed #936 some time ago (pr: #937) i made a tiny errorthe issue was to hide the preview panel when deleting/cutting an entry but it also hid it when aborting the delete-confirmation-dialogi too refactored both actions a little to make it easier for future changesi also removed in `undoableremoveentry` and `undoableinsertentry` the id generation,|| nice video :smile: for reproducing the issue!
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1229,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1091 apply and ensure correct import sort order,see #1091,|| i just posted this at the pr:maybe you could evaluate that: || we need something like checkstyle which enforces it using gradle we should maybe activate checkstyle for this making the build fail if the imports are not in order  || i looked through some of the source files and have noticed that there is no clear order in which the classes are importedthus i think we firstly need to decide on a proper order (eg first jdk related imports then jabref and after that the rest with a blank line between)furthermore i prefer the fully qualified imports over the generalized ones (*) || checkstyle checks are now in place for forcing one to remove unused imports we can add additional checks eg for the import order but we should be careful not to add to much and only add additional checks as an evolution of the code base see 9e9fc8c || ( || ![image]( || in eclipse automatically generated - use `gradlew eclipse`![grabbed_20160412-143351]( || ![image]( || this is solved do we need to post the intellij configuration at  || did we document this in the wiki? || it is now added at https://githubcom/jabref/jabref/wiki/guidelines-for-setting-up-a-local-workspace#intellij
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1388,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fix sorting issue #1357,the logic is fucked but this should fix the issueproblem was that when sort in original order was selected the corresponding variable newsortorder would still read the disabled sort order inside the jdialog,|| could you elaborate a bit why you opened and why you closed it? im just curious :) || dont think it makes sense to do it that way we more likely need a controller-based solution for this
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1584,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,added layout dateformatter see #1249,added a configurable layout formatter for dates 1249-  change in changelogmd described-  ,|| so if i understand you correctly you want a formatter which formats the date field to a specific form (say yyyy/mm/dd)? || yes exactly! for now date field is output as yyyy-mm-dd but i would like the possibility to use at mm/yyyy for my documents needs thanks || @meltr biblatex explicitly needs the date format in iso from the biblatex reference manual:  date specifications > the date fields dateorigdateeventdate and urldate require a date> specification in yyyy-mm-dd format date ranges are given as yyyy-mm-dd/yyyy-mm-ddthe formatted display of the date in the citation/bibliography is depending on the biblatex style and language you use and of couse if you provide the arguments:see 311 load-time options for an example || @siedlerchr : @meltr is talking about a layoutformatter to export the bib-file to some other suitable format (or to use with openoffice/libreoffice) || ah now i get it :) it was a bit confusing for me
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1888,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,do not mark a new database as changed,1881  i missed an if-statement when inverting an if/else in #1830 - ~~ change in changelogmd described~~ - introduced in development version only (fortunately)-  manually tested changed features in running jabref,|| this is already the case? _file_ -> _new database_ *- do nothing - *_file_ -> _close database_no message is shown || not in my development version just noticed it so i think it is something quite recent || i can confirm this behaviour in the dev version on windows to || my bad ill add a pr fixing this in a minute
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2211,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,prevent the search to get focus when deleting/pasting an entry,fixes: #2208when you delete an entry the focus will no longer jump to the searchbar instead it will select the next entry (also counts for pasting),|| @bartsch-dev could you have a look? üòá
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2554,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,replaced lrumap with a guava cache,this is intended as a fix for #2546note that the guava caches would allow for automated reloading of the entries but this is not undertaken in this implementation instead everything should work as before with the lrumap-  change in changelogmd described-  -  manually tested changed features in running jabref-   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| this can be closed now fixed in #2554
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,3248,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,fix for issue 2811: bibtexkey generator does not use crossref information,see #2811 the bibtex key generator now uses crossreferenced entries if required fields are empty-  change in changelogmd described-  -  manually tested changed features in running jabref-   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| fixed by #3248
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3670,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,3648: chained modifiers work again,   -->3648 the problem was that `resultinglabel  formatterget()format(label)` always used the original input and not the result of the previous modifier-----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| great thank you very much @tobiasdiez !
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,3887,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,improvements around external file types,        ( (      because github does not support autolinking there -->i tried to implement #3885 but changes of the file type in the linked file editor are not saved for some reason ill investigate this again after  is mergedthus only some relative minor code improvements / fixes:- refactor external file type classes and extract a common `externalfiletype` interface- extract all built-in file types to separate enum (implementing `externalfiletype`)- fix display of external file type editor dialog (which is not shown in the current maintable-beta version)-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| i think we need to check/adjust the detection and mark it as online link || we currently have no money to pay someone for that ([donations page]( no one of the jabref team gets paid for jabref thus working on this really depends on the availability of our personal free time - we really welcome feedback on our volunteer work in case you can spend some more time (other than reporting issues) we would really like to encourage you to check  - especially the part asking for improvement of our [help pages]( this would help jabref getting better as a whole ü•á
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,3970,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,fixieee,3966  followup from my previous prnow document links  in the format ` are supported tooand i also tested the paper linked in the issue from university network that works fine too         ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| the test for open access articles such as  workthere should be no difference for the other articles as long as you really have accessit is hard to debug for me as i dont have ieee access at university @jabref/developers anyone of you has access? || i can reproduce this error for me the ieee fetcher tests fail when i am connected using university vpnthe html page  i get from the url downloader talks about missing cookie support i will see if i can fix that  || thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from  and report back if it works for you || no please read the text very carefullyi have explicitly mentioned that i am using the latest developmental version the problem still persists please reopen this issue || we just merged a pull request fixing it || @krishnakumarg1984  yes i know but i just merged the code into the master branch the development build gets automatically updated and built by our ci servers whenever someone commits to the master branch this usually takes a couple of minutes the version string contains the first part of the commit id  (help-> about)  || ah i am so sorry for not correctly interpreting what you said i shall try the latest development build and report back sorry for the mild confusion in my last post || @siedlerchr  @stefan-kolb we may have to reopen this issuei just tried with the latest build>>jabref 42-dev--snapshot--2018-04-20--master--8bbc40e13>windows 7 61 x86 >java 180_161from my universitys network and same error pop-up message persists   curiously the event log in jabref is empty i wonder why #3968 says the problem is only with vpn access? i am currently physically on the campus library on a windows 7 machine hard-wired to the network with a lan cable  just to confirm that this is indeed a persisting bug there is no issue with full-text access to this article from a standard browser pointed to the url   || i think @krishnakumarg1984 is right and the issue still persist just looking at the code never going to match ` || hmm thats odd i will look into that again tomorrow  || @krishnakumarg1984  i just merged the fix which supports those the ieee document urls you have like in your entry  and i also tested your entry with university access and worked for me so i would like you to test this again || @siedlerchr  thank you i shall go to university to check this out will report back soon || woohoo you guys are amazing i just tried the latest master-build from my universitys network and can confirm that this is now fixed  was able to download the full-text of the bibtex entry for which the issue was opened thank you for accepting and pro-actively working to fix this issue#### version info of jabref build used:>jabref 42-dev--snapshot--2018-04-21--master--5c664e1d2>windows 7 61 x86 >java 180_161
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4311,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,fix drag and drop in entry editor,43054087 (comment same issue described)consistent with preview panel behavior        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| just copy and paste of the preview panel methods
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4337,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fix export of corporate author to msoffice,fix testsfix  #4329  the underlying problem is the same as in #4152 however i came up with a workaround for msoffice 1 getting the original field2 check for corporate author (braces start and end)3 get latex free value4 readd braces for corporate 5 parse authorthe only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces that one will probably be interpreted as corporate        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4644,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,fix for issue 4641: remove usage of tempdirectory extension from junit-pioneer,fixes: #4641 removed the tempdirectory extension from junit-pioneer with the built-in extension of junit 54-----  manually tested changed features in running jabref-  (https://githubcom/joelparkerhenderson/git_commit_message),|| i am working on this issue
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,4696,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,remove resolve duplicate keys dialog,        ( (      because github does not support autolinking there -->4614removes the resolve duplicate keys dialog this feature is made obsolete by the integrity check and the user can generate new keys very simply (for all entries or only for the duplicated ones) through the entry editor and/or menu-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| good afternooni received the appended windows and error log while opening my data basei think the issue is linked with an attempt from jabref to resolve duplicated keysregardsherv√©[pb jabreftxt]( jabref]( || a related but not completely identical problem is reported in #4630 || we decided to remove this dialog as the feature is already covered in the integrity check and will be covered in the import dialog
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5086,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,bugfix/5045 : modified the existing logic to comply crossref resolution with biblatex specification,5045        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| as of now jabref simply takes the value of the same field from the referenced entry these advanced mappings of biblatex are not yet taken into accountthe following code needs to be adapted: || @tobiasdiez ill work on this issue || @tobiasdiez pr  is open for review || thanks to @cyraxsector  this should be fixed now in the latest master  || thanks for your effort unfortunately this does not work for me in the latest master see the [attached mwe]( for testingjabref 50-dev--snapshot--2019-08-26--master--b2e6e8383linux 440-159-generic amd64 java 1104 || thanks to you this should be fixed in the latest development version üò∏  could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5229,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add doi url eprint  field to general tab layout,4612        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| applies only to bibtex i think || this should be a preferences issue only as it can be configured via options -> setup general fields || this has really high priority as we do every fetching based on the doi fields! || > applies only to bibtex i thinkapplies to both modes as far as i can see
0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5266,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,issue #5223,issue #5223 add @software and  @dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to @unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in @software and @dataset entry type ![entrytype](  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| please send the bib file to me my email should appear on my github site:  || as reported to koppor:the ranks were shown one day later may be it was caused somehow by either the very first start of jabref or importing preferences without restarting jabref || @teertinker so everything is fine for you now?@koppor could you reproduce the issue with the bib file? if not i would suggest to close the issue for now || everything works for me now it was not a problem of my bib file it was either related to loading my bib file the first time with jabref 30 or importing preferences without restarting jabref in either case the reported issue isnt one
0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,5266,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,issue #5223,issue #5223 add @software and  @dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to @unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in @software and @dataset entry type ![entrytype](  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5352,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,bring back the context menu,as explained in  it is no longer possible to customize the context menu items because the classes related to the text field behavior are not accessible thus instead i simply copied the relevant code from openjdk pretty ugly workaround 5254 and refs  i removed the custom tab handling because it is now working as expected (ie #2902 is fixed in java 9+)        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| (: @matthiasgeiger  || attention!shift+tab usually moves the cursor to the _previous_ field on the contrary tab moves to the _following_ tabtherefore i suggest to keep unmodified the behaviour of shift+tab but to add the usual behavior of the tab button || this should be fixed in the latest development version could you please check the build from  thanks! || checked right now v 40 beta2 and working!many thanks!
1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5519,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,fix xmp null error,5449 was caused by wrapping a set of fields in a treeset without specifying the comparator        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| @homocomputeris are the pdfs freely available? it would be nice if you added them via a pr so that we can create test cases- pdf directory for tests:  bib files:  (or add the bib files as skeleton java code or just as text in the pr) || the one from my snippet is  it doesnt write to any pdffor example from these links i downloaded jabref-authorsbib and one pdf and say i want to write the 1st entry metadata to the pdf:```garridokallstromkummetal2016  error while writing /home/user/documents/literature/thesis-examplepdf:    nullfinished writing xmp for 0 file (0 skipped 1 errors)``` || i tried it today with the latest snapshot on windows 10: the same `null` error is raised || thanks to @tobiasdiez  this issue should be fixed nowwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version
1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1168,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,1163 by removing the strange functionality which enabled sorting‚Ä¶,we have some very strange logic in jabref which allows to handle years using only the two last numbers so we can detect that 68 means 1968 this causes a lot of issues i do not think that jabref should still support such strange logic and just use the value which is in the year field hence i removed it this also solves the issue of having that yearutil in the model package which duplicated a method in the stringutil class refs #1163,
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1440,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,1420 auto downloader should respect file pattern and propose correct filename,(https://cloudentcom/assets/2141507/15472274/898030a4-20fa-11e6-9a77-8cfac10688d5png),
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1443,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,651: improve parsing of author names containing braces,651-  change in changelogmd described-  -   (),|| yeapi remove all the latex stuf and opened ok (the eof error persist) || one should probably use the bibtex-vm-based name formatters || note that the above is a bad example since the correct way to write the acute accent is `\{e}` and `h\{e}l\grave{e}ne fiaux` is correctly written as `fiaux h`however `h{e}lene fiaux` results in the unexpected `fiaux he` || i propose to close this as it is only a very minor bug which only occurs in very special circumstances with bad input any objections @jabref/developers ?
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1487,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,implement getextension and getdescription for importers,implement getextension and getdescription for importers #1444 -  change in changelogmd described-  ,|| should be fixed by #1487 isnt it?
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2114,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,ctrl-s parsing error message,2109 ctrl-s doesnt trigger parsing error messageproblem: conflict of local shortcut (of the entry editor) with the global shortcutsolution: local shortcut removed (the action assigned to local and global shortcut is essentially the same (save database))-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2226,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fix for #2218: reenable ads fetcher,(see #2218)fetcher is now working again- ~~ change in changelogmd described~~ affected search based fetcher still unreleased-  tests ~~created for changes~~ pass again- ~~  ()~~-  manually tested changed features in running jabref- ~~  ( [helpjabreforg]( ~~ if you changed the localization: did you run `gradle ate`?~~,|| potential quickfix: user agent? || maybe you can go ahead and try! || not from my smartphone :wink:
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3325,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3292: annotations are now automatically refreshed,   -->this pr aims to 3292 by removing the refresh button completely and monitoring the pdf files automatically for changes in the progress of the implementation a few refactorings were made:- extract the file monitoring functionality from `fileupdatemonitor` to a new class and convert the timestamp-based method to the new nio watcher interface- extract the conflict handling code by external bib file changes from the base panel to a new class `databasechangemonitor` where also some of the old code from `fileupdatemonitor` now finds a new home this class is still a bit ugly but in my opinion better than before i hope that the conflict handling still works as expected i tested it but might have missed some special cases/configurations------  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3931,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3929 correct fetcher messages,3929,
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4549,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fixes that renaming a group did not change the group name in the interface,3189,|| when you close and expand the group the change should also be visible no idea though why it is not visible immediately the same issue occurs if you assign an icon or color to the group || might be related to this: || these bug still exists i will work on it || when i press edit group that show `orgjabrefmodelgroupsabstractgroup#name` instead of `orgjabrefguigroupsgroupnodeviewmodel#displayname` why? whats the difference between them? || the `displayname` is a formatted version of `name` for example if `name` contains latex commands like `hell\{o}` then `displayname` is the unicode version `hell√≥` || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version || can confirm this has been fixed in:jabref 50-dev--snapshot--2019-01-05--master--d281ece4bwindows 10 100 amd64 java 180_191
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,4604,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,enable default cursor for new entry,4600sets text field on focus at the end of initialization by running the javafx thread-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| thanks to @chelseyong this is now implemented in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4964,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,remove ui threadlist for maintable as it prevents sorting in maintable,4886renenables sortingtried a bit around and could not find any side issue so far        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| thanks for the report that is definitely a regression bug it was working fine a few versions ago if i remember correctlyedit// confirmed on windows 10 with 47f43ca63616f04bfa780c9a8d83143d919d1f80 tjabref 50-devwindows 10 100 amd64 java 180_202 || @tobiasdiez  i found the issue: in the maintable if i remove the bindings wrapper it works again``` thissetitems(bindingshelperforui(modelgetentriesfilteredandsorted()))        // enable sorting        modelgetentriesfilteredandsorted()comparatorproperty()bind(thiscomparatorproperty())``` || the issue is not solved in the latest snapshot of today (`2019-05-06 c168c4978`) || @siedlerchr @tobiasdiez what is the problem with this why is the correction not yet applied? it renders my working with jabref very difficult the version snapshot--2019-05-10--master--751c5b5e7 does not have sorting back || please be patient!  we understand that this is an important issue as long as the issue is not closed its not fixed no need to constantly question it  come on you know the ruleswhile the fix looks simple it might have other consequences which we need to check but i will look at it in detail now || should be fixe now in the latest master 3baa6bd we would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version || great it works! thanks
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,4999,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,fix iee fetcher,4997 add exception dialog on import failcheck if we have keywords field present in json        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| thanks for your report! this was indeed a bug in the ieee fetcher in addtion if any fetcher throws an error it will be displayed in a dialog nowwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,5048,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,preserve encoding while copy and pasting in maintable,5043encodes and decodes data with utf-8,|| first tests show that copying is fine but pasting alters the encoding via a bibtex parser || i can still reproduce the problem with today `jabref_windows-x64_5_0-dev--snapshot--2019-06-16--master--8d99db113` || the pr is not merged yet you can try the branch version if you like  || it is fixed thanks a lot!**edit**: but wait there is another bug maybe related to this issue here i will test and report**edit2**: the bug #5069 is not related to this issue can be closed if merged || merged this now into master so will be avaiable in a couple of minutes in the master version
1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,5454,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,fix highlight issues for lists,5277 and fixes #5035 the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones)        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| @tobiasdiez im working on this
1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,5454,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,fix highlight issues for lists,5277 and fixes #5035 the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones)        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| jabref 50-devlinux 500-27-generic amd64 java 180_222cannot reproduce the behaviour mentioned above i reckon this has now been fixed with  (?) || i will start investigations on this || jabref 50-devlinux 500-27-generic amd64 java 1104ok i can now reproduce this behaviour with the current snap version on the --edge channel this indicates that this issue was introduced somewhere between the release of the current snap version (or rather the one from 9th september) on the --beta channel and the current snap version on the --edge channel || @cyraxsector  you can try to narrow down the bug a git bisect: || cannot reproduce the behavior mentioned above can you please provide more information || jabref 50-dev--snapshot--2019-09-26--master--1a6c92c79windows 10 100 amd64 java 1104-bellsofti can still reproduce this behaviour you can force it to happen by scrolling with the mouse wheel in the fetcher sidepane and then switching back to just scrolling with the mouseif you just scroll with the mouse (without using the mouse wheel) you will sometimes encounter the issue and sometimes not but by using the mouse wheel scrolling first and then the mouse scrolling itself afterwards the issue always appears || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version || jabref 500-dev--2019-10-18----bc26c3ac5windows 10 100 amd64 java 1202i can confirm that this has been fixed in the current dev version
1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5472,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,fix highlight problem in entry preview,5069 by using markjs        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| issues is from the search highlighting of the search term when you stop searching its back to normal  || the highlighting is handled by this simple javascript code: || i know nothing about jswhat does your last post mean? it is easy to fix or the opposite? || i have tried if this issue still remains in the master branch and not only does it lose formatting it also jumps to the author field automatically so i am rewriting my author after search finds a resultthe formatting goes back to normal when i click to other article not after finishing search as @siedlerchr saidi would like to look at this issue and fix it || the problem is probably that we read the inner text (ie everything without formatting) and then set it as the inner html should work if `documentbodyinnertext` is replaced by `documentbodyinnerhtml` || @tobiasdiez  it is not that easy thats what i did before the problem is then that it displays and searches matches in html tags  || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version || confirmed it is fixed and working for methanks a lot
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5680,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add throttle to autosaveuimanager,as discussed in #5679 there are a lot of save actions performed when autosave is turned on this pr adds a timer which limits the save actions to one in 200ms which is especially handy when automated tasks like find and replace are performed-  change in changelogmd described (if applicable)-  ,
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1950,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,towards hierarchical keywords,   -->this pr is the first step towards supporting hierarchical keywords #628 -  refactor the keyword-related code to use new classes `keywordlist` and `keyword` -  unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877-  move keyword delimiter from preferences to metadata (database properties) -> new pr-  add hierarchical delimiter and change parsing logic in `keywordlist` accordingly -> new pr-  change ui to support hierarchical keywords -> new prnote: i also moved the stringutil class to model (in some sense it is jabrefs own string class) and removed entryutil (only had methods related to strings (-> stringutil) or keywords (-> keywordlist) )-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| string tokenizer ist really really legacy code  should either be stringsplit or scanner || and in medlineimporter the author decided to use `` as separator and ignore the preferences (the separator from the preferences is available in importformatpreferences) || addressed in #1950
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2891,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,adjust tests: ads fetcher returns url dblp no longer works with negative operators,#2890internal change only some adjusted tests,|| fixed in https://githubcom/jabref/jabref/pull/2891
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3092,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fetcher timestamp,3074,|| thank you for your report :+1:this should be fixed in current `master` please try the latest build from  || this should be fixed in the latest development version could you please check the build from  thanks! || i checked the latest master build and the behavior is as expected now thanks!
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3506,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3359: automatically remove colon and apostrophe from key pattern,   -->3359 colons and apostrophes are now removed from the generated key patterni also refactored the key generator mainly converting the static methods to instance methods-----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| could you please re-check the behavior with the most recent development version available here:  and report what you find?since the release of 40 there have been changes in the key generation which might also have affected this || sorry on my mac it says things like file damaged and should be moved to trash your faq says i can avoid this by changing the security setting to allow apps from anywhere but i dont have this option on my os (sierra 10126) || i can verify that this happens in the latest 11-13 build on windows:```jabref 41-dev--snapshot--2017-11-13--master--c1d425a31windows 10 100 amd64 java 180_152```not only the special characters like colon or ` are kept in the key phrase i also think it is not necessary to keep the curly brackets in the file name when the pdf file is downloaded from the fetcher automatically based on the bibtex information (the curly brackets are from the title entry in the bibtex code) but this could be a separate issue  || this should be fixed in the latest development version could you please check the build from  thanks!
1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4355,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,auto trim url field,        ( (      because github does not support autolinking there -->fixes 4288]created a formatter to auto trim all kinds of whitespace defined by java-----  change in changelogmd described-  -  manually tested changed features in running jabref-   () _no need_-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| i thought opening and closing spaces were automatically trimmed for each field before? || cant seem to pinpoint where url fields are to be trimmed the only method that seems to deal with urls is in modsexporterjava called addurl i added code to trim url but doesnt reflect in the application does anyone know what i am missing?  || hithe right place is in the entry editor i saw that there is already a paste handler for the the url field in the fieldseditors class   i think it should be sufficient to create a copy of the  removenewlinesformatter which only removes newlines before the first opening brace and the last closing brace and then add this as paste handler to the code area || thanks to @songyu-wang this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4547,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,do not extract file ending from urls,4544 do not extract file ending from urls,|| thanks to @stefan-kolb  this should be fixed  in the latest masterwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,4731,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,fix default import format pattern,remove display arrayadd migration4724        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| this issue should be fixed now in the lastet masterwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version || yep the defaults are now correct thanks!
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4761,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,enable import button only if entry selected,        ( (      because github does not support autolinking there -->fixes 4755](  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| i would like to work on this issue || @samiyac glad to hear!you should be able to get the button via `(button) thisgetdialogpane()lookupbutton()` then it is probably enough to bind the `disableproperty` to the `emptyproperty` of the list of checked items
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5195,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,add citation commands to texparser,we added a few more citation commands: `autocite` `autocite` `blockcquote` and `textcquote`this pr 5194-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5354,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,fix group color when scrolling,5022 problem was that the pseudo-class was not initialized correctly but was only triggered upon changes        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2169,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,fix failing ads test,added missing fields 2168,|| should we separate the fetcher tests from the normal tests? similar to thedatabase and integration tests? this would enable a separation and keepavoid failing tests being unrelated to a certain pr
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,2816,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,2806: date editor also accepts incomplete dates,   -->should fix  and   change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,3203,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,when groups are removed also remove them from entries,3190-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| this is a bug it is reproducible while removing or changing group name from entry editor works fine but from groups menu it shows unexpected behaviour
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,3388,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,added checking integrity dialog,this change is related to #3358 jabref looked like it is hanging during long integrity checks i added a dialog with a progress bar to show that it is working![checkingintegrity](  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3502,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,update user agent and change acm to https,fix acm fetcher3500    -->-----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| i can only reproduce the fetcher bug itself seems like there has been an update to the acm page  || the outdated jdk version could be part of the problem the latest development snapshot should display a warning that says that you need at least 180_144
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,3539,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,fix options databinding by adding elements if they are not in the initial map,3538 i dunno if this is the best idea but it works   -->-----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4860,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,remove deprecated awt apple extension,3905        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| at least with java 9 they are obsolete and with javafx no longer needed but we still have one or two dialogs who use them  || refs #3861  || so full steam ahead for the javafx migration üéâ  || refs #3421
0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,2229,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,fix medline fetcher by using https,fix for #2228 -  change in changelogmd described-   ( [helpjabreforg](  write blog post regarding  november 9 2016 ncbi  servers will redirect or reject all  requests,|| was about to fix that too -)changing the urls in `medlinefetcherjava` is sufficientplease also provide a changelog entry as this change will break previous jabref versionsmore information at pubmed:  || we should also make an announcement since: > after november 9 2016 ncbi  servers will redirect or reject all  requestshttps://wwwncbinlmnihgov/home/develop/https-guidanceshtml
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,2921,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,2854: readd context menu to linked files editor,   -->this was the last feature missing from the old file list editor the old class could thus be deleted-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| the filelisteditor needs to be apdated to javafx
1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,3211,1.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,added logic to check whether linked file already exists,#3172 added a check in linkedfileviewmodelrename() to see if a file which isbeing renamed already exists in the target location if such a file isfound then an error popup displays informing the user of the conflictuser will be prompted to choose whether to overwrite or cancelalso see #3188 for additional details,|| have a look at ```public class linkedfileviewmodel extends abstractviewmodel { public void rename() { ``` || it sounds like adding a check for existing files in that directory with the targetfilename and then showing the error dialog would take care of this  i can fix this fairly quickly want me to work on it? || didnt take very long at all actually![samefilenameerror]( || yeah cool stuff! just open the pr and well have a look at it! || fixed in #3211 thanks @andrew-lev!
1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,5539,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,improve performance,improve performance by:- caching fields as keywordlist- remove duplicate change listener- remove preference access in loopwith these changes the mega huge library of @aegit works without too much delays (the initial loading of the database is a bit slow but still ok) thus this pr is a potential fix for #4430 and for  describe the changes you have made here:        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| the changing of group is still slow and causes a spike in cpu load  tested with a large database o 6400 entries and many groups memory is not an issue( || can confirm - i might have time during this weekend to run some additional performance test unfortunately my yourkit java profiler test license ran out so i will probably have to create a new virtual machine and run a new installation of yourkit in there - unless someone else knows a method to extend the evaluation period a little? i dont really need the tool except for showing the performance issues in the current jabref version compared to version 382 || this should be fixed now a few remaining performance issues are mentioned at  || jabref 500-dev--2019-11-28----ce0e8870cwindows 10 100 amd64 java 1301this issue indeed appears to be fixed in the current version of jabref (the remaining issues can be found here:  big shout out to @tobiasdiez for the continuous support!
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1970,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1958: verbatim url field is no longer checked for html encoded chars,-  change in changelogmd described-  -  manually tested changed features in running jabref,|| integrity check for url should be disabled generally at least in biblatex all url related fields are treated as verbatim || there is `fieldpropertyverbatim` that can be used as there are more fields which are verbatim in biblatex || like this? `if (!internalbibtexfieldsgetfieldproperties(fieldgetkey())contains(fieldpropertyverbatim)) {`
1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5670,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,1.0,1.0,improve column preference migration,    #333 : 47]( title of the pr must not reference an issue because github does not support autolinking there-->5661<!-- - all items with `` are still a todo-  `` - remove items not applicable-->-  change in changelogmd described (if applicable)-  -  -   ()-  [](   <https://githubcom/jabref/user-documentation/issues>,|| @calixtus  you recently worked on this feature? || oh thanks didnt see that thanks for the fixsorry that im not much of help at the moment i submitted my thesis and im learning for my exams in the end of january maybe ive got some time in christmas-holidays
0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,4011,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,reimplement tooltips for file and identifier columns,this 3973reimplements tooltips for file- url-/doi- and eprint-column in the maintable-beta-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| fixed by #4011
0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,5326,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,fix problem with search and switching between libraries,4846 by using bindings instead of listeners        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| @bdcafi recently worked on the search feature and i would like you to try out this version here and report back if it is now working for you: || did a quick test  unfortunately it still restores the deleted search || thanks for your feedback will look into this in #4897  || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version
